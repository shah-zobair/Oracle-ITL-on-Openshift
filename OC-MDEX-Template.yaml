apiVersion: v1
kind: Template
labels:
  template: mdex
  application: mdex
metadata:
  annotations:
    description: Template for deploying Oracle Commerce MDEX instance
    iconClass: icon-mysql-database
    tags: quickstart,oracle
  labels:
    application: mdex
  name: mdex
  namespace: openshift
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: ${NAME}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      volume.alpha.kubernetes.io/storage-class: ${VOLUME_TYPE}
    name: ${NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
    name: ${NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      type: Docker
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: oc_base:latest
          namespace: openshift
      type: Source
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      application: mdex
      name: ${NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          application: mdex
          name: ${NAME}
        name: ${NAME}
      spec:
        containers:
        - env:
          - name: SERVICE_NAME
            value: ${SERVICE_NAME}
          image: ' '
          imagePullPolicy: IfNotPresent
          name: ${NAME}
          ports:
          - containerPort: 8888
            name: mdex
          - containerPort: 8006
            name: cas
          - containerPort: 17000
            name: lb-mdex
          - containerPort: 17002
            name: authoring-mdex
          - containerPort: 17010
            name: log-mdex
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          volumeMounts:
          - mountPath: /apps/opt/weblogic/endeca
            name: ${NAME}-data
        volumes:
        - name: ${NAME}-data
          persistentVolumeClaim:
            claimName: ${NAME}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
parameters:
- description: Used to create MDEX instances, names must be uniqe for a cluster which will be dynamically generated.
  from: mdex-[a-z0-9]{4}
  generate: expression
  name: NAME
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 4096Mi
- description: The exposed hostname that will route to the CakePHP service, if left
    blank a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 5Gi
- description: volume type, eg kubernetes.io/aws-ebs
  displayName: Volume type
  name: VOLUME_TYPE
  required: true
  value: kubernetes.io/cinder
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  value: https://github.com/shah-zobair/Oracle-ITL-on-Openshift.git
- description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
- description: Set this to the relative path to your project if it is not in the root
    of your repository.
  displayName: Context Directory
  name: CONTEXT_DIR
- description: A secret string used to configure the GitHub webhook.
  displayName: GitHub Webhook Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
